<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "http://toolkit.alibaba-inc.com/dtd/log4j/log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
    <appender name="DEFAULT-APPENDER" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="file" value="./logs/default.log"/>
        <param name="append" value="true"/>
        <param name="encoding" value="UTF-8"/>
        <param name="threshold" value="info"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %-32t - %m%n"/>
        </layout>
    </appender>

    <appender name="ERROR-APPENDER" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="file" value="./logs/error.log"/>
        <param name="append" value="true"/>
        <param name="encoding" value="UTF-8"/>
        <param name="threshold" value="error"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %-32t - %m%n"/>
        </layout>
    </appender>
   <!-- 打印sql日志到文件中 日志级别设置为：TRACE-->
    <appender name="sql-appender" class="org.apache.log4j.FileAppender">
        <!-- 日志文件全路径名 -->
        <param name="file" value="./logs/sql.log" />
        <!--是否在已存在的文件追加写：默认时true，若为false则每次启动都会删除并重新新建文件-->
        <param name="append" value="true" />
        <param name="threshold" value="TRACE"/>
        <layout class="org.apache.log4j.PatternLayout">
            <!-- 日志输出格式 -->
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5p] [method:%l]%n%m%n%n" />
        </layout>
    </appender>
    <!--<appender name="debug-appender" class="org.apache.log4j.RollingFileAppender">
        &lt;!&ndash; 日志文件全路径名 &ndash;&gt;
        <param name="file" value="./logs/web.log" />
        &lt;!&ndash;是否在已存在的文件追加写：默认时true，若为false则每次启动都会删除并重新新建文件&ndash;&gt;
        <param name="append" value="true" />
        <param name="threshold" value="debug"/>
        &lt;!&ndash; 保存备份日志的最大个数，默认值是：1  &ndash;&gt;
        <param name="maxBackupIndex" value="10" />
        &lt;!&ndash; 设置当日志文件达到此阈值的时候自动回滚，单位可以是KB，MB，GB，默认单位是KB，默认值是：10MB &ndash;&gt;
        <param name="maxFileSize" value="10KB" />
        &lt;!&ndash; 设置日志输出的样式 &ndash;&gt;
        <layout class="org.apache.log4j.PatternLayout">
            &lt;!&ndash; 日志输出格式 &ndash;&gt;
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5p] [method:%l]%n%m%n%n" />
        </layout>
    </appender>-->
    <!--控制台输出sql执行过程-->
    <appender name="CONSOLE-APPENDER" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{dd/MM/yy hh:mm:ss:sss z}] %5p %c{2}: %m%n" />
        </layout>
    </appender>
    <!-- 这个就是自定义的一个logger -->
    <!--
     注意：
     1：当additivity="false"时，root中的配置就失灵了，不遵循缺省的继承机制
     2：logger中的name非常重要，它代表记录器的包的形式，有一定的包含关系，试验表明
        2-1：当定义的logger的name同名时，只有最后的那一个才能正确的打印日志
        2-2：当对应的logger含有包含关系时，比如：name=test.log4j.test8 和 name=test.log4j.test8.UseLog4j，则2-1的情况是一样的
        2-3：logger的name表示所有的包含在此名的所有记录器都遵循同样的配置，name的值中的包含关系是指记录器的名称哟！注意啦！
     3：logger中定义的level和appender中的filter定义的level的区间取交集
     4：如果appender中的filter定义的 levelMin > levelMax ，则打印不出日志信息
     -->
<!--    <logger name="test.log4j.test8.UseLog4j" additivity="false">-->
<!--        <level value ="warn"/>-->
<!--        <appender-ref ref="warn-appender"/>-->
<!--    </logger>-->

<!--    <logger name="java.sql.Connection" additivity="true">-->
<!--        <level value="trace" />-->
<!--    </logger>-->

<!--    <logger name="java.sql.Statement" additivity="true">-->
<!--        <level value="trace" />-->
<!--    </logger>-->

<!--    <logger name="java.sql.PreparedStatement" additivity="true">-->
<!--        <level value="trace" />-->
<!--    </logger>-->

<!--    <logger name="java.sql.ResultSet" additivity="true">-->
<!--        <level value="trace" />-->
<!--    </logger>-->

    <!--    <logger name="java.sql.ResultSet" additivity="false">-->
<!--        <level value="trace" />-->
<!--    </logger>-->
    <!-- 输出级别是debug级别及以上的日志，下面的ref关联的两个appender没有filter设置，
           所以，debug及以上的日志都是会输出到这4个appender的 -->
    <root>
        <level value="trace" />
        <appender-ref ref="sql-appender" />
        <appender-ref ref="CONSOLE-APPENDER" />
        <appender-ref ref="ERROR-APPENDER" />
        <appender-ref ref="DEFAULT-APPENDER" />
    </root>

</log4j:configuration>